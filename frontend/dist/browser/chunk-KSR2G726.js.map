{
  "version": 3,
  "sources": ["src/app/dashboard/state/dashboard.actions.ts", "src/app/dashboard/service/dashboard.service.ts", "src/app/dashboard/state/dashboard.state.ts"],
  "sourcesContent": ["export class GetBadItemsRate {\n  static readonly type = '[Dashboard] Get bad items rate';\n  constructor() { }\n}\n\nexport class GetMachinesWithLowestOee {\n  static readonly type = '[Dashboard] Get machines with lowest OEE';\n  constructor() { }\n}\n\nexport class GetMachinesBrief {\n  static readonly type = '[Dashboard] Get machines brief';\n  constructor() { }\n}\n", "import { Injectable } from '@angular/core';\nimport { CrudService } from '../../services/crud/crud.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(private crudService: CrudService) { }\n\n  getBadItemsRate() {\n    return this.crudService.read('/bad-units-rate');\n  }\n\n  getMachinesWithLowestOee() {\n    return this.crudService.read('/machines/lowest_oee');\n  }\n\n  getMachines() {\n    return this.crudService.read('/machines');\n  }\n}\n", "import { Injectable } from '@angular/core';\nimport { State, Action, Selector, StateContext } from '@ngxs/store';\nimport { GetBadItemsRate, GetMachinesBrief, GetMachinesWithLowestOee } from './dashboard.actions';\nimport { DashboardService } from '../service/dashboard.service';\nimport { tap } from 'rxjs';\nimport { Machine, MachineSummary } from '../../models/machine';\n\nexport interface DashboardStateModel {\n  badItemsPercentage: number;\n  machinesWithLowestOee: MachineSummary[] | null;\n  machinesBrief: Machine[] | null;\n}\n\n@State<DashboardStateModel>({\n  name: 'dashboard',\n  defaults: {\n    badItemsPercentage: 0,\n    machinesWithLowestOee: null,\n    machinesBrief: null\n  }\n})\n@Injectable()\nexport class DashboardState {\n\n  constructor(private dashboardService: DashboardService) { }\n\n  @Selector()\n  static badItemsRate(state: DashboardStateModel) {\n    return state.badItemsPercentage;\n  }\n\n  @Selector()\n  static machinesWithLowestOee(state: DashboardStateModel) {\n    return state.machinesWithLowestOee;\n  }\n\n  @Selector()\n  static machinesBrief(state: DashboardStateModel) {\n    return state.machinesBrief;\n  }\n\n  @Action(GetBadItemsRate)\n  getBadItemsRate(ctx: StateContext<DashboardStateModel>, action: GetBadItemsRate) {\n    return this.dashboardService.getBadItemsRate().pipe(\n      tap({\n        next: (badItemsPercentage: any) => {\n          ctx.patchState({ badItemsPercentage });\n        }\n      })\n    )\n  }\n\n  @Action(GetMachinesWithLowestOee)\n  getMachinesWithLowestOee(ctx: StateContext<DashboardStateModel>, action: GetMachinesWithLowestOee) {\n    return this.dashboardService.getMachinesWithLowestOee().pipe(\n      tap({\n        next: (machinesWithLowestOee: any) => {\n          ctx.patchState({ machinesWithLowestOee });\n        }\n      })\n    )\n  }\n\n  @Action(GetMachinesBrief)\n  getMachinesBrief(ctx: StateContext<DashboardStateModel>, action: GetMachinesBrief) {\n    return this.dashboardService.getMachines().pipe(\n      tap({\n        next: (machinesBrief: any) => {\n          ctx.patchState({ machinesBrief });\n        }\n      })\n    )\n  }\n}\n"],
  "mappings": "6HAAA,IAAaA,GAAe,IAAA,CAAtB,IAAOA,EAAP,MAAOA,CAAe,CAE1BC,aAAA,CAAgB,GADAC,EAAAC,KAAO,iCADnB,IAAOH,EAAPE,SAAOF,CAAe,GAAA,EAKfI,GAAwB,IAAA,CAA/B,IAAOA,EAAP,MAAOA,CAAwB,CAEnCH,aAAA,CAAgB,GADAI,EAAAF,KAAO,2CADnB,IAAOC,EAAPC,SAAOD,CAAwB,GAAA,EAKxBE,GAAgB,IAAA,CAAvB,IAAOA,EAAP,MAAOA,CAAgB,CAE3BL,aAAA,CAAgB,GADAM,EAAAJ,KAAO,iCADnB,IAAOG,EAAPC,SAAOD,CAAgB,GAAA,ECJ7B,IAAaE,GAAgB,IAAA,CAAvB,IAAOA,EAAP,MAAOA,CAAgB,CAE3BC,YAAoBC,EAAwB,CAAxB,KAAAA,YAAAA,CAA4B,CAEhDC,iBAAe,CACb,OAAO,KAAKD,YAAYE,KAAK,iBAAiB,CAChD,CAEAC,0BAAwB,CACtB,OAAO,KAAKH,YAAYE,KAAK,sBAAsB,CACrD,CAEAE,aAAW,CACT,OAAO,KAAKJ,YAAYE,KAAK,WAAW,CAC1C,yCAdWJ,GAAgBO,EAAAC,CAAA,CAAA,CAAA,wBAAhBR,EAAgBS,QAAhBT,EAAgBU,UAAAC,WAFf,MAAM,CAAA,EAEd,IAAOX,EAAPY,SAAOZ,CAAgB,GAAA,QCgBhBa,GAANC,EAAA,KAAoB,CAEzBC,YAAoBC,EAAkC,CAAlC,KAAAA,iBAAAA,CAAsC,CAGnD,OAAAC,aAAaC,EAA0B,CAC5C,OAAOA,EAAMC,kBACf,CAGO,OAAAC,sBAAsBF,EAA0B,CACrD,OAAOA,EAAME,qBACf,CAGO,OAAAC,cAAcH,EAA0B,CAC7C,OAAOA,EAAMG,aACf,CAGAC,gBAAgBC,EAAwCC,EAAuB,CAC7E,OAAO,KAAKR,iBAAiBM,gBAAe,EAAGG,KAC7CC,EAAI,CACFC,KAAOR,GAA2B,CAChCI,EAAIK,WAAW,CAAET,mBAAAA,CAAkB,CAAE,CACvC,EACD,CAAC,CAEN,CAGAU,yBAAyBN,EAAwCC,EAAgC,CAC/F,OAAO,KAAKR,iBAAiBa,yBAAwB,EAAGJ,KACtDC,EAAI,CACFC,KAAOP,GAA8B,CACnCG,EAAIK,WAAW,CAAER,sBAAAA,CAAqB,CAAE,CAC1C,EACD,CAAC,CAEN,CAGAU,iBAAiBP,EAAwCC,EAAwB,CAC/E,OAAO,KAAKR,iBAAiBe,YAAW,EAAGN,KACzCC,EAAI,CACFC,KAAON,GAAsB,CAC3BE,EAAIK,WAAW,CAAEP,cAAAA,CAAa,CAAE,CAClC,EACD,CAAC,CAEN,yCAlDWR,GAAcmB,EAAAC,CAAA,CAAA,CAAA,wBAAdpB,EAAcqB,QAAdrB,EAAcsB,SAAA,CAAA,EAApBrB,GAoBLsB,EAAA,CADCC,EAAOC,CAAe,CAAC,EAAAzB,EAAA,UAAA,kBAAA,IAAA,EAYxBuB,EAAA,CADCC,EAAOE,CAAwB,CAAC,EAAA1B,EAAA,UAAA,2BAAA,IAAA,EAYjCuB,EAAA,CADCC,EAAOG,CAAgB,CAAC,EAAA3B,EAAA,UAAA,mBAAA,IAAA,EApClBuB,EAAA,CADNK,EAAQ,CAAE,EAAA5B,EAAA,eAAA,IAAA,EAMJuB,EAAA,CADNK,EAAQ,CAAE,EAAA5B,EAAA,wBAAA,IAAA,EAMJuB,EAAA,CADNK,EAAQ,CAAE,EAAA5B,EAAA,gBAAA,IAAA,EAdAA,EAAcuB,EAAA,CAT1BM,EAA2B,CAC1BC,KAAM,YACNC,SAAU,CACRzB,mBAAoB,EACpBC,sBAAuB,KACvBC,cAAe,MAElB,CAAC,EAEWR,CAAc",
  "names": ["GetBadItemsRate", "constructor", "_GetBadItemsRate", "type", "GetMachinesWithLowestOee", "_GetMachinesWithLowestOee", "GetMachinesBrief", "_GetMachinesBrief", "DashboardService", "constructor", "crudService", "getBadItemsRate", "read", "getMachinesWithLowestOee", "getMachines", "\u0275\u0275inject", "CrudService", "factory", "\u0275fac", "providedIn", "_DashboardService", "DashboardState", "_a", "constructor", "dashboardService", "badItemsRate", "state", "badItemsPercentage", "machinesWithLowestOee", "machinesBrief", "getBadItemsRate", "ctx", "action", "pipe", "tap", "next", "patchState", "getMachinesWithLowestOee", "getMachinesBrief", "getMachines", "\u0275\u0275inject", "DashboardService", "factory", "\u0275fac", "__decorate", "Action", "GetBadItemsRate", "GetMachinesWithLowestOee", "GetMachinesBrief", "Selector", "State", "name", "defaults"]
}
