{
  "version": 3,
  "sources": ["src/app/machines/pages/machine-details/machine-details.component.ts", "src/app/machines/pages/machine-details/machine-details.component.html"],
  "sourcesContent": ["import { Component, OnDestroy, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, of, Subscription, switchMap, tap } from 'rxjs';\nimport { MachineSummary } from '../../../models/machine';\nimport { Store } from '@ngxs/store';\nimport { GetMachineById } from '../../state/machines/machines.actions';\nimport { CommonModule } from '@angular/common';\nimport { MachinesState } from '../../state/machines/machines.state';\nimport { EntryFormComponent } from '../../components/entry-form/entry-form.component';\nimport { EntriesTableComponent } from '../../components/entries-table/entries-table.component';\nimport { DxChartModule } from 'devextreme-angular';\n\n@Component({\n  selector: 'oee-machine-details',\n  standalone: true,\n  imports: [\n    CommonModule,\n    EntryFormComponent,\n    EntriesTableComponent,\n    DxChartModule\n  ],\n  templateUrl: './machine-details.component.html',\n  styleUrl: './machine-details.component.scss'\n})\nexport class MachineDetailsComponent implements OnDestroy {\n  // @ViewChild('entryForm') entryForm?: EntryFormComponent;\n  machine$ = this.store.select(MachinesState.machineById).pipe(\n    tap({\n      next: (machine) => {\n        if (!machine?.error)\n          this.machineDetails = (machine as MachineSummary);\n      }\n    })\n  );\n  entries$ = this.machine$.pipe(\n    map(machine => machine?.entries),\n    map(entries => entries?.map(entry => ({ ...entry, created_at: new Date(entry.created_at) })))\n  )\n  machineDetails: MachineSummary | null = null;\n\n  routeSubscription: Subscription;\n\n  constructor(private route: ActivatedRoute, private store: Store) {\n    this.routeSubscription = this.routeSubscription = this.route.params.pipe(\n      switchMap(params => this.getMachineById(parseInt(params['id'])))\n    ).subscribe()\n  }\n\n  getMachineById(id?: number | null) {\n    if (id)\n      return this.store.dispatch(new GetMachineById(id))\n    return of(null)\n  }\n\n  ngOnDestroy(): void {\n    this.routeSubscription.unsubscribe()\n  }\n}\n", "<ng-container *ngIf=\"(machine$ | async) as machine\">\n  <div *ngIf=\"machine.error as error; else machineTemplate\">\n    <h1>Error - {{error.status}}</h1>\n    <h2>{{error.message}}</h2>\n  </div>\n\n  <ng-template #machineTemplate>\n    <div class=\"flex flex-wrap items-center\">\n      <div>\n        <h1>{{machine.name}} - Details</h1>\n        <p>OEE: {{machine.average_oee | percent:'1.1-1'}}</p>\n      </div>\n\n      <button class=\"btn ms-auto bg-primary text-fg-primary\" (click)=\"machineDetails && entryForm.open(machineDetails)\">\n        Add Entry +\n      </button>\n    </div>\n\n    <dx-chart class=\"my-5\" [dataSource]=\"(entries$ | async) ?? []\">\n      <dxo-argument-axis>\n        <dxo-label format=\"shortDate\"></dxo-label>\n      </dxo-argument-axis>\n\n      <dxi-value-axis [visualRange]=\"{\n        startValue: 0,\n        endValue: 1\n      }\" [maxValueMargin]=\"0.001\">\n        <dxo-label format=\"percent\"></dxo-label>\n      </dxi-value-axis>\n\n      <dxo-common-series-settings type=\"spline\" argumentField=\"created_at\"\n                                  argumentType=\"date\"></dxo-common-series-settings>\n\n      <dxi-series valueField=\"oee\" name=\"oee\"> </dxi-series>\n      <dxi-series valueField=\"performance\" name=\"performance\"> </dxi-series>\n      <dxi-series valueField=\"quality\" name=\"quality\"> </dxi-series>\n      <dxi-series valueField=\"availability\" name=\"availability\"> </dxi-series>\n    </dx-chart>\n\n    <oee-entries-table [entries]=\"(entries$ | async) ?? []\"></oee-entries-table>\n    <oee-entry-form #entryForm (submit)=\"getMachineById(machine?.id)\"></oee-entry-form>\n  </ng-template>\n</ng-container>\n\n\n"],
  "mappings": "8lBCCEA,EAAA,EAAA,KAAA,EAA0D,EAAA,IAAA,EACpDC,EAAA,CAAA,EAAwBC,EAAA,EAC5BF,EAAA,EAAA,IAAA,EAAIC,EAAA,CAAA,EAAiBC,EAAA,EAAK,qBADtBC,EAAA,CAAA,EAAAC,EAAA,WAAAC,EAAAC,OAAA,EAAA,EACAH,EAAA,CAAA,EAAAI,EAAAF,EAAAG,OAAA,sCAIJR,EAAA,EAAA,MAAA,CAAA,EAAyC,EAAA,KAAA,EAClC,EAAA,IAAA,EACCC,EAAA,CAAA,EAA0BC,EAAA,EAC9BF,EAAA,EAAA,GAAA,EAAGC,EAAA,CAAA,iBAA8CC,EAAA,EAAI,EAGvDF,EAAA,EAAA,SAAA,CAAA,EAAuDS,EAAA,QAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAC,EAAAC,EAAA,EAAA,EAAAC,EAAAC,EAAA,CAAA,EAAA,OAAAC,EAAAF,EAAAG,gBAA2BL,EAAAM,KAAAJ,EAAAG,cAAA,CAA8B,CAAA,CAAA,EAC9GhB,EAAA,EAAA,eAAA,EACFC,EAAA,EAAS,EAGXF,EAAA,EAAA,WAAA,CAAA,gBACEA,EAAA,GAAA,mBAAA,EACEmB,EAAA,GAAA,YAAA,CAAA,EACFjB,EAAA,EAEAF,EAAA,GAAA,iBAAA,CAAA,EAIEmB,EAAA,GAAA,YAAA,CAAA,EACFjB,EAAA,EAEAiB,EAAA,GAAA,6BAAA,EAAA,EAC6E,GAAA,aAAA,EAAA,EAEvB,GAAA,aAAA,EAAA,EACgB,GAAA,aAAA,EAAA,EACR,GAAA,aAAA,EAAA,EAEhEjB,EAAA,EAEAiB,EAAA,GAAA,oBAAA,EAAA,gBACAnB,EAAA,GAAA,iBAAA,GAAA,CAAA,EAA2BS,EAAA,SAAA,UAAA,CAAAC,EAAAC,CAAA,EAAA,IAAAS,EAAAL,EAAA,EAAAM,KAAAP,EAAAC,EAAA,EAAA,OAAAC,EAAUF,EAAAQ,eAAAF,GAAA,KAAA,KAAAA,EAAAG,EAAA,CAA2B,CAAA,CAAA,EAAErB,EAAA,mCA/B1DC,EAAA,CAAA,EAAAC,EAAA,GAAAgB,EAAAI,KAAA,YAAA,EACDrB,EAAA,CAAA,EAAAC,EAAA,QAAAqB,EAAA,EAAA,EAAAL,EAAAM,YAAA,OAAA,EAAA,EAAA,EAQgBvB,EAAA,CAAA,EAAAwB,EAAA,cAAAC,EAAAC,EAAA,GAAA,EAAAf,EAAAgB,QAAA,KAAA,MAAAF,IAAAG,OAAAH,EAAAI,EAAA,GAAAC,EAAA,CAAA,EAKL9B,EAAA,CAAA,EAAAwB,EAAA,cAAAK,EAAA,GAAAE,EAAA,CAAA,EAGd,iBAAA,IAAA,EAae/B,EAAA,CAAA,EAAAwB,EAAA,WAAAQ,EAAAN,EAAA,GAAA,GAAAf,EAAAgB,QAAA,KAAA,MAAAK,IAAAJ,OAAAI,EAAAH,EAAA,GAAAC,EAAA,CAAA,6BAvCvBG,EAAA,CAAA,EACEC,EAAA,EAAAC,GAAA,EAAA,EAAA,MAAA,CAAA,EAA0D,EAAAC,GAAA,GAAA,GAAA,cAAA,KAAA,EAAAC,CAAA,gCAApDrC,EAAA,EAAAwB,EAAA,OAAAP,EAAAqB,KAAA,EAAoB,WAAAC,CAAA,GDuB5B,IAAaC,IAAuB,IAAA,CAA9B,IAAOA,EAAP,MAAOA,CAAuB,CAkBlCC,YAAoBC,EAA+BC,EAAY,CAA3C,KAAAD,MAAAA,EAA+B,KAAAC,MAAAA,EAhBnD,KAAAC,SAAW,KAAKD,MAAME,OAAOC,EAAcC,WAAW,EAAEC,KACtDC,EAAI,CACFC,KAAOC,GAAW,CACXA,GAASb,QACZ,KAAKxB,eAAkBqC,EAC3B,EACD,CAAC,EAEJ,KAAAxB,SAAW,KAAKiB,SAASI,KACvBI,EAAID,GAAWA,GAASE,OAAO,EAC/BD,EAAIC,GAAWA,GAASD,IAAIE,GAAUC,EAAAC,EAAA,GAAKF,GAAL,CAAYG,WAAY,IAAIC,KAAKJ,EAAMG,UAAU,CAAC,EAAG,CAAC,CAAC,EAE/F,KAAA3C,eAAwC,KAKtC,KAAK6C,kBAAoB,KAAKA,kBAAoB,KAAKjB,MAAMkB,OAAOZ,KAClEa,EAAUD,GAAU,KAAKzC,eAAe2C,SAASF,EAAO,EAAK,CAAC,CAAC,CAAC,EAChEG,UAAS,CACb,CAEA5C,eAAeC,EAAkB,CAC/B,OAAIA,EACK,KAAKuB,MAAMqB,SAAS,IAAIC,EAAe7C,CAAE,CAAC,EAC5C8C,EAAG,IAAI,CAChB,CAEAC,aAAW,CACT,KAAKR,kBAAkBS,YAAW,CACpC,yCAhCW5B,GAAuB6B,EAAAC,CAAA,EAAAD,EAAAE,CAAA,CAAA,CAAA,sBAAvB/B,EAAuBgC,UAAA,CAAA,CAAA,qBAAA,CAAA,EAAAC,WAAA,GAAAC,SAAA,CAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,kBAAA,EAAA,EAAA,CAAA,YAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,CAAA,EAAA,OAAA,UAAA,EAAA,CAAA,EAAA,OAAA,YAAA,cAAA,EAAA,CAAA,EAAA,MAAA,UAAA,aAAA,kBAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,YAAA,EAAA,CAAA,SAAA,WAAA,EAAA,CAAA,EAAA,cAAA,gBAAA,EAAA,CAAA,SAAA,SAAA,EAAA,CAAA,OAAA,SAAA,gBAAA,aAAA,eAAA,MAAA,EAAA,CAAA,aAAA,MAAA,OAAA,KAAA,EAAA,CAAA,aAAA,cAAA,OAAA,aAAA,EAAA,CAAA,aAAA,UAAA,OAAA,SAAA,EAAA,CAAA,aAAA,eAAA,OAAA,cAAA,EAAA,CAAA,EAAA,SAAA,EAAA,CAAA,EAAA,QAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICxBpC9C,EAAA,EAAAgD,GAAA,EAAA,EAAA,eAAA,CAAA,qBAAe1D,EAAA,OAAAE,EAAA,EAAA,EAAAuD,EAAArC,QAAA,CAAA,iBDgBXuC,EAAYC,EAAAC,EAAAC,EACZC,EACAC,GACAC,EAAaC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CAAA,CAAA,CAAA,EAKX,IAAOvD,EAAPwD,SAAOxD,CAAuB,GAAA",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "error_r1", "status", "\u0275\u0275textInterpolate", "message", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r2", "entryForm_r3", "\u0275\u0275reference", "ctx_r3", "\u0275\u0275nextContext", "\u0275\u0275resetView", "machineDetails", "open", "\u0275\u0275element", "machine_r5", "ngIf", "getMachineById", "id", "name", "\u0275\u0275pipeBind2", "average_oee", "\u0275\u0275property", "tmp_7_0", "\u0275\u0275pipeBind1", "entries$", "undefined", "\u0275\u0275pureFunction0", "_c0", "_c1", "tmp_10_0", "\u0275\u0275elementContainerStart", "\u0275\u0275template", "MachineDetailsComponent_ng_container_0_div_1_Template", "MachineDetailsComponent_ng_container_0_ng_template_2_Template", "\u0275\u0275templateRefExtractor", "error", "machineTemplate_r6", "MachineDetailsComponent", "constructor", "route", "store", "machine$", "select", "MachinesState", "machineById", "pipe", "tap", "next", "machine", "map", "entries", "entry", "__spreadProps", "__spreadValues", "created_at", "Date", "routeSubscription", "params", "switchMap", "parseInt", "subscribe", "dispatch", "GetMachineById", "of", "ngOnDestroy", "unsubscribe", "\u0275\u0275directiveInject", "ActivatedRoute", "Store", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "MachineDetailsComponent_ng_container_0_Template", "CommonModule", "NgIf", "AsyncPipe", "PercentPipe", "EntryFormComponent", "EntriesTableComponent", "DxChartModule", "DxChartComponent", "DxoArgumentAxisComponent", "DxoLabelComponent", "DxoCommonSeriesSettingsComponent", "DxiSeriesComponent", "DxiValueAxisComponent", "_MachineDetailsComponent"]
}
