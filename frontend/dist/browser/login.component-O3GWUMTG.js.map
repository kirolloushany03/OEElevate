{
  "version": 3,
  "sources": ["src/app/auth/pages/login/login.component.ts", "src/app/auth/pages/login/login.component.html"],
  "sourcesContent": ["import { DxFormComponent, DxFormModule } from 'devextreme-angular';\nimport { Component, ViewChild } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Login } from '../../state/auth.actions';\nimport { Router, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    DxFormModule,\n    RouterModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n  @ViewChild('formComponent') formComponent?: DxFormComponent;\n\n  loginForm = {\n    email: '',\n    password: ''\n  };\n\n  passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$/;\n\n  loginError$ = this.store.select(state => state.auth.loginError);\n\n  constructor(private store: Store, private router: Router) {}\n\n  onLogin(e: any) {\n    e.preventDefault();\n\n    this.store.dispatch(new Login(this.loginForm)).subscribe(() => {\n      this.router.navigate(['/dashboard']);\n    })\n  }\n}\n", "<h1 class=\"mb-4\">Login</h1>\n<form (submit)=\"onLogin($event)\" class=\"flex flex-col gap-3 w-5/6 max-w-96\">\n  <dx-form [formData]=\"loginForm\" #formComponent>\n    <dxi-item dataField=\"email\">\n      <dxi-validation-rule type=\"required\" message=\"Email is required\"></dxi-validation-rule>\n      <dxi-validation-rule type=\"email\" message=\"Email is invalid\"></dxi-validation-rule>\n    </dxi-item>\n\n    <dxi-item dataField=\"password\" type=\"password\" [editorOptions]=\"{mode:'password'}\">\n      <dxi-validation-rule type=\"required\" message=\"Password is required\"></dxi-validation-rule>\n      <dxi-validation-rule type=\"pattern\" [pattern]=\"passwordPattern\" message=\"Password must contain at least 8 characters, 1 number, 1 uppercase and 1 lowercase letter\"></dxi-validation-rule>\n    </dxi-item>\n\n    <dxi-item itemType=\"button\">\n      <dxo-button-options [useSubmitBehavior]=\"true\" text=\"Log in\"></dxo-button-options>\n    </dxi-item>\n  </dx-form>\n</form>\n\n<p *ngIf=\"loginError$ | async\" class=\"text-danger\">\n  {{loginError$ | async}}\n</p>\n\n<p>\n  Don't have an account?\n  <a routerLink=\"/sign-up\" class=\"text-primary\">\n    Sign up\n  </a>\n</p>\n"],
  "mappings": "6dCmBAA,EAAA,EAAA,IAAA,EAAA,EACEC,EAAA,CAAA,eACFC,EAAA,kBADEC,EAAA,EAAAC,EAAA,IAAAC,EAAA,EAAA,EAAAC,EAAAC,WAAA,EAAA;CAAA,GDFF,IAAaC,IAAc,IAAA,CAArB,IAAOA,EAAP,MAAOA,CAAc,CAYzBC,YAAoBC,EAAsBC,EAAc,CAApC,KAAAD,MAAAA,EAAsB,KAAAC,OAAAA,EAT1C,KAAAC,UAAY,CACVC,MAAO,GACPC,SAAU,IAGZ,KAAAC,gBAAkB,wCAElB,KAAAR,YAAc,KAAKG,MAAMM,OAAOC,GAASA,EAAMC,KAAKC,UAAU,CAEH,CAE3DC,QAAQC,EAAM,CACZA,EAAEC,eAAc,EAEhB,KAAKZ,MAAMa,SAAS,IAAIC,EAAM,KAAKZ,SAAS,CAAC,EAAEa,UAAU,IAAK,CAC5D,KAAKd,OAAOe,SAAS,CAAC,YAAY,CAAC,CACrC,CAAC,CACH,yCApBWlB,GAAcmB,EAAAC,CAAA,EAAAD,EAAAE,CAAA,CAAA,CAAA,sBAAdrB,EAAcsB,UAAA,CAAA,CAAA,WAAA,CAAA,EAAAC,UAAA,SAAAC,EAAAC,EAAA,IAAAD,EAAA,4wBClB3BhC,EAAA,EAAA,KAAA,CAAA,EAAiBC,EAAA,EAAA,OAAA,EAAKC,EAAA,EACtBF,EAAA,EAAA,OAAA,CAAA,EAAMkC,EAAA,SAAA,SAAAC,EAAA,CAAAC,OAAAC,EAAAC,CAAA,EAAAC,EAAUN,EAAAb,QAAAe,CAAA,CAAe,CAAA,CAAA,EAC7BnC,EAAA,EAAA,UAAA,EAAA,CAAA,EAA+C,EAAA,WAAA,CAAA,EAE3CwC,EAAA,EAAA,sBAAA,CAAA,EAAuF,EAAA,sBAAA,CAAA,EAEzFtC,EAAA,EAEAF,EAAA,EAAA,WAAA,CAAA,EACEwC,EAAA,EAAA,sBAAA,CAAA,EAA0F,GAAA,sBAAA,CAAA,EAE5FtC,EAAA,EAEAF,EAAA,GAAA,WAAA,EAAA,EACEwC,EAAA,GAAA,qBAAA,EAAA,EACFtC,EAAA,EAAW,EACH,EAGZuC,EAAA,GAAAC,EAAA,EAAA,EAAA,IAAA,EAAA,gBAIA1C,EAAA,GAAA,GAAA,EACEC,EAAA,GAAA,0BAAA,EACAD,EAAA,GAAA,IAAA,EAAA,EACEC,EAAA,GAAA,WAAA,EACFC,EAAA,EAAI,QAzBKC,EAAA,CAAA,EAAAwC,EAAA,WAAAV,EAAArB,SAAA,EAMwCT,EAAA,CAAA,EAAAwC,EAAA,gBAAAC,EAAA,EAAAC,CAAA,CAAA,EAET1C,EAAA,CAAA,EAAAwC,EAAA,UAAAV,EAAAlB,eAAA,EAIhBZ,EAAA,CAAA,EAAAwC,EAAA,oBAAA,EAAA,EAKtBxC,EAAA,EAAAwC,EAAA,OAAAtC,EAAA,GAAA,EAAA4B,EAAA1B,WAAA,CAAA,kBDRAuC,EAAYC,EAAAC,EACZC,EAAYC,EAAAC,EAAAC,EAAAC,EACZC,EAAYC,CAAA,EAAAC,OAAA,CAAA;yDAAA,CAAA,CAAA,EAKV,IAAOhD,EAAPiD,SAAOjD,CAAc,GAAA",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind1", "ctx_r1", "loginError$", "LoginComponent", "constructor", "store", "router", "loginForm", "email", "password", "passwordPattern", "select", "state", "auth", "loginError", "onLogin", "e", "preventDefault", "dispatch", "Login", "subscribe", "navigate", "\u0275\u0275directiveInject", "Store", "Router", "selectors", "viewQuery", "rf", "ctx", "\u0275\u0275listener", "$event", "i0", "\u0275\u0275restoreView", "_r1", "\u0275\u0275resetView", "\u0275\u0275element", "\u0275\u0275template", "LoginComponent_p_13_Template", "\u0275\u0275property", "\u0275\u0275pureFunction0", "_c1", "CommonModule", "NgIf", "AsyncPipe", "DxFormModule", "DxFormComponent", "DxiItemComponent", "DxiValidationRuleComponent", "DxoButtonOptionsComponent", "RouterModule", "RouterLink", "styles", "_LoginComponent"]
}
